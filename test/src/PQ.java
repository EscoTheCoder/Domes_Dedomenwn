class PQ{

    private int[] pq;
    private int N; //δηλώνει αριθμό ενεργών θέσεων

    PQ(int maxN){
        pq = new int[maxN];
        N=0;

    }

    // Μέθοδος εισαγωγής στοιχείου
    void insert(int v) {
        // Εύρεση της σωστής θέσης για την εισαγωγή του νέου στοιχείου
        int i = N - 1;
        while (i >= 0 && pq[i] < v) {
            pq[i + 1] = pq[i]; // Μετακίνηση στοιχείων προς τα δεξιά
            i--;
        }
        pq[i + 1] = v; // Εισαγωγή του στοιχείου στη σωστή θέση
        N++; // Αύξηση του αριθμού ενεργών θέσεων
    }

    // Μέθοδος εξαγωγής του μέγιστου στοιχείου
    int getmax() {
        if (N == 0) throw new IllegalStateException("Η ουρά προτεραιότητας είναι κενή!");
        int max = pq[0]; // Ο μέγιστος αριθμός είναι στη θέση 0
        for (int i = 1; i < N; i++) {
            pq[i - 1] = pq[i]; // Μετακίνηση στοιχείων προς τα αριστερά
        }
        N--; // Μείωση του αριθμού ενεργών θέσεων
        return max;
    }

    void print(){
        for(int i=0; i<N; i++){
            System.out.print(pq[i]+" ");
        }
    }
}